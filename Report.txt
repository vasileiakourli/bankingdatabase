Α) Βήματα Κανονικοποίησης της Βάσης και Β) Σύγκριση των τελικών αποτελεσμάτων

Α) Θέλουμε να δημιουργήσουμε μια βάση με όνομα ‘BankDB’ και θέλουμε ταυτόχρονα να πετύχουμε σε αυτή μείωση εξαφάνιση της περιττής πληροφορίας, αλλά και αποφυγή απώλειας χρήσιμης πληροφορίας. Αυτό θα το πετύχουμε κάνοντας κανονικοποίηση σε BCNF.
Ξεκινάμε με τον Πίνακα temp όπου περιέχει όλα τα γνωρίσματα που μας έχουν δοθεί από την εκφώνηση.
Customer_id
FirstName
LastName
Gender
Customer_City
Age
...
...
...

Κάνουμε load το datasetA και έχουμε πλέον τις εγγραφές μας.

Βήματα Κανονικοποίησης
1. Παρατηρούμε ότι κανένα γνώρισμα δεν έχει τιμή κάποιο σύνολο τιμών και ότι οι στήλες-γνωρίσματα του πίνακα δεν θέλουν διάσπαση, οπότε συμπεραίνουμε ότι το σχήμα αυτό είναι ήδη σε 1NF.

2. Έχοντας βασικό κλειδί το Trn_Code * βλέπουμε ότι όλα τα μη πρωτεύοντα γνωρίσματα έχουν πλήρη εξάρτηση από αυτό επομένως το σχήμα είναι ήδη σε 2NF.

3. Έχουμε τις εξής συναρτησιακές εξαρτήσεις, που προκύπτουν και από την εκφώνηση της άσκησης :
-Trn_Code->Trn_Type, Trn_Amount, Trn_Date, Current_Balance, Account_id
-Account_id-> OpenDate, Cards_Linked, Currency, Customer_id, Customer_FirstName, Customer_LastName, Customer_City, Age, Gender, Children, Educational, Product_Code, Product_Name, Branch_Code, Branch_City, NumberofEmployees
- Customer_id-> Customer_FirstName, Customer_LastName, Customer_City, Age, Gender, Children, Educational
Άρα το Τrn_Code προσδιορίζει μεταβατικά κάποια γνωρίσματα μέσω του Account_id, ενώ και το Account_id προσδιορίζει συναρτησιακά μεταβατικά τα Customer_FirstName, Customer_LastName, Age κλπ μέσω του Customer_id, το Product_Name μέσω του Product_Code και τα Branch_City,NumberofEmployees μέσω του Branch_Code. Επομένως δεν βρίσκεται σε 3NF. Για να το φέρουμε σε αυτήν την κανονική μορφή θα δημιουργήσουμε τα αντίστοιχα πινακάκια αυτών  των συναρτησιακών εξαρτήσεων.

Άρα έχουμε τους πίνακες 
customers(Customer_id, Customer_FirstName, Customer_LastName, Customer_City, Age, Gender, Children, Educational),
products(Product_Code, Product_Name),
branch(Branch_Code,Branch_City,NumberofEmployees),
accounts(Account_id, OpenDate, Cards_Linked, Currency, Customer_id, Product_Code, Branch_Code), 
και τον trn(Trn_Code, Trn_Type, Trn_Amount, Trn_Date, Current_Balance, Account_id).

4. Βλέπουμε τώρα τα πινακάκια και έχει το καθένα από ένα γνώρισμα για κλειδί και όλα τα μη πρωτεύοντα γνωρίσματα εξαρτώνται από το αντίστοιχο κλειδί του πίνακα. Άρα το σχήμα αυτό βρίσκεται σε BCNF.
*Το Trn_Code είναι το βασικό κλειδί, γιατί μοναδικοποιεί όλες τις εγγραφές.  
Τέλος, κάνουμε drop τον αρχικό πίνακα temp και έχουμε φτιάξει τη βάση.

Β) 
Συνολικός χρόνος δημιουργίας ευρετηρίων
Με: 62,032 sec

Χρόνος φόρτωσης νέων δεδομένων
Χωρίς: 746,5 sec
Με: 1025,786 sec

Χρόνος απάντησης ερωτήματος 1
Χωρίς: 47,125 sec
Με: 26,406 sec

Χρόνος απάντησης ερωτήματος 2
Χωρίς: 7,063 sec/ 31,454 sec
Με: 2,391 sec/ 9,578 sec

Χρόνος απάντησης ερωτήματος 3
Χωρίς: 43,579 sec
Με: 12,109 sec

Χρόνος απάντησης ερωτήματος 4
Χωρίς: 11,687 sec
Με: 11,110 sec

Χρόνος απάντησης ερωτήματος 5
Χωρίς: 7,485 sec/ 3,062 sec
Με: 6,230 sec/ 2,310 sec

Από το πλάνο εκτέλεσης των περιπτώσεων φαίνεται ότι, αντί να χρησιμοποιηθούν 
στη δεύτερη περίπτωση (με τα ευρετήρια) τα by default ευρετήρια (π.χ αυτά των 
primary keys των πινάκων accounts και transactions) χρησιμοιούνται αυτά που 
έφτιαξα μειώνοντας τον χρόνο εκτέλεσης 3 ερωτημάτων στο μισό περίπου,
 ενώ των άλλων 2 λίγα ακόμα δευτερόλεπτα κάτω. Τέλος βλέπουμε ότι ο χρόνος εισαγωγής 
των νέων δεδομένων αυξήθηκε αρκετά στην 2η περίπτωση.
